Given an integer array nums and an integer k, return the k most frequent elements.
You may return the answer in any order.
-------------------------------------------------------
优先级队列
首先用map存储频率信息
然后用优先级队列来弄一个大小为k的小顶堆 每次把最小的poll掉，剩下的倒序放到res数组就行了。
class Solution {
    public int[] topKFrequent(int[] nums, int k) {
        int[] res = new int[k];
        Map<Integer, Integer> hs = new HashMap<>();
        for(int num : nums){
            hs.put(num, hs.getOrDefault(num,0)+1);
        }
        Set<Map.Entry<Integer, Integer>> entries = hs.entrySet();

        PriorityQueue<Map.Entry<Integer, Integer>> queue = new PriorityQueue<>((o1, o2) -> o1.getValue() - o2.getValue());
        for(Map.Entry<Integer, Integer> entry: entries) {
            queue.offer(entry);
            if(queue.size() > k) {
                queue.poll();
            }
        }
        for(int i = k-1; i>=0; i--) {
            res[i] = queue.poll().getKey();
        }
        return res;
    }
}
