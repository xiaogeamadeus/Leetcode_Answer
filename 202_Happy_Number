Write an algorithm to determine if a number n is happy.

A happy number is a number defined by the following process:

Starting with any positive integer, replace the number by the sum of the squares of its digits.
Repeat the process until the number equals 1 (where it will stay), or it loops endlessly in a cycle which does not include 1.
Those numbers for which this process ends in 1 are happy.
Return true if n is a happy number, and false if not.
------------------------------------
最开始的思路是用hs存储平方的值，发现不太行有点蠢，没法判定循环了。实际上应当存
class Solution {
    public boolean isHappy(int n) {
        Set<Integer> hs = new HashSet<>();
        while (!hs.contains(n) && n != 1) {
            hs.add(n);
            n = getNextNumber(n);
        }
        return n == 1;
    }

    public int getNextNumber(int n) {
        int sum = 0;
        while (n > 0) {
            int a = n % 10;
            sum += a * a;
            n /= 10;
        }
        return sum;
    }
}
