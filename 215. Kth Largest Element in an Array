Given an integer array nums and an integer k, return the kth largest element in the array.

Note that it is the kth largest element in the sorted order, not the kth distinct element.



-------------------------------------------------------------------
class Solution {
    public int findKthLargest(int[] nums, int k) {
        shuffle(nums);
        int lo = 0, hi = nums.length - 1;
        k = nums.length - k;
        while(lo <= hi){
            int p = partition(nums, lo, hi);
            if(p < k) {
                lo = p + 1;
            } else if (p > k) {
                hi = p - 1;
            } else {
                return nums[p];
            }
        }
        return -1;
    }

    public int partition(int[] nums, int lo, int hi) {

        int pivot = nums[lo];
        int i = lo + 1,  j = hi;

        while(i <= j) {
            while(i < hi && nums[i] <= pivot) {
                i++;
            }
            while(j > lo && nums[j] > pivot) {
                j--;
            }

            if(i >= j) break;

            swap(nums, i, j);
        }
        swap(nums, j, lo);
        return j;
    }

    public void shuffle(int[] nums) {
        Random rand = new Random();
        for(int i = 0; i < nums.length ; i++) {
            int r = i + rand.nextInt(nums.length - i);
            swap(nums, i, r);
        }
    }

    public void swap(int[] nums, int i, int j){
        int temp = nums[i];
        nums[i] = nums[j];
        nums[j] = temp;
    }
}
