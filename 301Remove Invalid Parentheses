Given a string s that contains parentheses and letters, 
remove the minimum number of invalid parentheses to make the input string valid.

Return all the possible results. You may return the answer in any order.

-------------------------------------------------------------


class Solution {
    public List<String> removeInvalidParentheses(String s) {
        List<String> res = new ArrayList<>();
        Set<String> currSet = new HashSet<>();

        currSet.add(s);
        while (true) {
            // to output the results
            for (String str : currSet) {
                if (isValid(str)) {
                    res.add(str);
                }
            }
            // 中断while循环，输出结果
            if (res.size() > 0) {
                return res;
            }
            Set<String> nextSet = new HashSet<>();
            for (String str : currSet) {
                for (int i = 0; i < str.length(); i++) {
                    if (i > 0 && str.charAt(i) == str.charAt(i-1)) {
                        continue;
                    }
                    if (str.charAt(i) == '(' || str.charAt(i) == ')') {
                        nextSet.add(str.substring(0, i) + str.substring(i + 1));
                    }
                }
            }
            currSet = nextSet;
        }


    }

    private boolean isValid (String str) {
        char[] s = str.toCharArray();
        int count = 0;

        for (char c : s) {
            if (c == '(') {
                count++;
            } else if (c == ')') {
                count--;
                if (count < 0) {
                    return false;
                }
            }
        }
        return count == 0;
    }
}
