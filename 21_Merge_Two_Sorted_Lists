You are given the heads of two sorted linked lists list1 and list2.

Merge the two lists in a one sorted list. The list should be made by splicing together the nodes of the first two lists.

Return the head of the merged linked list.

---------------------------------------------------------------------------------------
双指针 推进就行了 主要是掌握ListNode的用法

class Solution {
    public ListNode mergeTwoLists(ListNode list1, ListNode list2) {

        ListNode dummy = new ListNode(-1);

        ListNode p = dummy;
        ListNode p1 = list1;
        ListNode p2 = list2;

        while (p1 != null && p2 != null){
            if(p1.val > p2.val){
                p.next = p2;
                p2 = p2.next;
            }
            else{
                p.next = p1;
                p1 = p1.next;
            }
            p = p.next;
        }
        if(p1 == null){
            p.next = p2;
        }
        if(p2 == null){
            p.next = p1;
        }
        return dummy.next;

    }
}

执行耗时:0 ms,击败了100.00% 的Java用户
内存消耗:40.7 MB,击败了19.59% 的Java用户

虚拟头节点dummy用于在进行返回的时候可以直接return dummy.next; 简直太方便了。同时这个占位符可以避免让我们处理空指针的情况，非常之好用。


