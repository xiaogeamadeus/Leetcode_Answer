Given two strings s and t, return true if t is an anagram of s, and false otherwise.

An Anagram is a word or phrase formed by rearranging the letters of a different word or phrase,
typically using all the original letters exactly once.
---------------------------------------------
hashmap方法
class Solution {
    public boolean isAnagram(String s, String t) {
        if(s.length() != t.length()) return false;
        Map<Character, Integer> hs = new HashMap<>();
        for(int i = 0 ; i< s.length(); i++) {
            hs.put(s.charAt(i), hs.getOrDefault(s.charAt(i), 0)+1);
        }
        boolean flag = true;
        for(int i = 0; i < t.length(); i++) {
            if (!hs.containsKey(t.charAt(i))) {
                flag  = false;
                break;
            } else if(hs.get(t.charAt(i)) == 0){
                flag  = false;
                break;
            }else {
                hs.put(t.charAt(i), hs.get(t.charAt(i)) - 1);
            }
        }
        return flag;

    }
}

时间复杂度O(n) 空间复杂度O(m)，m是那个单词中不重复字母的数量。

数组方法
class Solution {
    public boolean isAnagram(String s, String t) {
        if(s.length() != t.length()) return false;

        int[] table = new int[26];
        for (int i = 0; i < s.length(); i++) {
            table[s.charAt(i) - 'a']++;
        }

        for (int i = 0; i < t.length(); i++) {
            table[t.charAt(i) - 'a']--;
            if(table[t.charAt(i) - 'a']<0)
                return false;
        }
        return true;
    }
}
